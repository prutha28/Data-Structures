package sorted.arrays;

/**
 * @author prutha!
 *
 *	This will consist of an underlying array of GameEntries of some fixed size.
 *	that we shall call capacity.
 */

public class ScoreCard {

	public static final int CAPACITY = 10 ;

	// Actual number of entries. ( <= CAPACITY)
	private int numEntries ;
	// This array is stored in an ordered manner from largest to lowest.
	private GameEntry[] board ;	

	public ScoreCard(){
		board = new GameEntry[ CAPACITY ] ;
		numEntries = 0 ;
	}


	public void addEntry( GameEntry entry)
	{
		if( CAPACITY == (numEntries - 1)){
			throw new IndexOutOfBoundsException() ;
		}
		
		
		
	}

	public GameEntry remove( int index ){

		int i = index ;

		if( i < 0 || i >= numEntries)
			throw new IndexOutOfBoundsException() ;

		GameEntry entry = board[ index ] ;
		// Code to move the elements 1 back.
		while( i <= numEntries -2)
		{
			board[ i ] = board[ i + 1 ] ;
			i++ ;
		}

		// Make the element in the last index null.
		board[ numEntries - 1] = null ;
		// DO NOT FORGET THIS.
		numEntries-- ;
		return entry ;
	}

	public void display(){
		for (int i = 0; i < board.length; i++) {
			System.out.println(board[ i ]);
			System.out.println();
		}
	}
}
